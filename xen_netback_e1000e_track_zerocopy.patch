From 253024bd838413a3154e0c8a51b7ad132273fba8 Mon Sep 17 00:00:00 2001
From: Dongli Zhang <dongli.zhang0129@gmail.com>
Date: Mon, 28 Jan 2019 08:59:01 +0800
Subject: [PATCH 1/1] net: use both SKBTX_DEV_ZEROCOPY and SKBTX_WIFI_STATUS to track sk_buff at e1000e

This patch is for linux 4.18.12.

The stat can be viewed via:

# cat /sys/kernel/debug/xen_zerocopy/xen_zerocopy_cnt

Signed-off-by: Dongli Zhang <dongli.zhang0129@gmail.com>
---
 drivers/net/ethernet/intel/e1000e/netdev.c | 42 ++++++++++++++++++++++++++++++
 drivers/net/xen-netback/interface.c        |  1 +
 2 files changed, 43 insertions(+)

diff --git a/drivers/net/ethernet/intel/e1000e/netdev.c b/drivers/net/ethernet/intel/e1000e/netdev.c
index 3ba0c90..63e6525 100644
--- a/drivers/net/ethernet/intel/e1000e/netdev.c
+++ b/drivers/net/ethernet/intel/e1000e/netdev.c
@@ -25,6 +25,9 @@
 #include <linux/pm_runtime.h>
 #include <linux/aer.h>
 #include <linux/prefetch.h>
+#ifdef CONFIG_DEBUG_FS
+#include <linux/debugfs.h>
+#endif
 
 #include "e1000.h"
 
@@ -39,6 +42,9 @@ static int debug = -1;
 module_param(debug, int, 0);
 MODULE_PARM_DESC(debug, "Debug level (0=none,...,16=all)");
 
+spinlock_t xen_zerocopy_lock;
+unsigned long xen_zerocopy_cnt = 0;
+
 static const struct e1000_info *e1000_info_tbl[] = {
 	[board_82571]		= &e1000_82571_info,
 	[board_82572]		= &e1000_82572_info,
@@ -5759,6 +5765,14 @@ static netdev_tx_t e1000_xmit_frame(struct sk_buff *skb,
 	unsigned int f;
 	__be16 protocol = vlan_get_protocol(skb);
 
+	if ((skb_shinfo(skb)->tx_flags & SKBTX_DEV_ZEROCOPY) &&
+	    (skb_shinfo(skb)->tx_flags & SKBTX_WIFI_STATUS)) {
+		skb_shinfo(skb)->tx_flags &= ~SKBTX_WIFI_STATUS;
+		spin_lock(&xen_zerocopy_lock);
+		xen_zerocopy_cnt++;
+		spin_unlock(&xen_zerocopy_lock);
+	}
+
 	if (test_bit(__E1000_DOWN, &adapter->state)) {
 		dev_kfree_skb_any(skb);
 		return NETDEV_TX_OK;
@@ -7562,6 +7576,32 @@ static struct pci_driver e1000_driver = {
 	.err_handler = &e1000_err_handler
 };
 
+#ifdef CONFIG_DEBUG_FS
+static void xen_zerocopy_create_debugfs(void)
+{
+	static struct dentry *d_xen_zerocopy;
+	struct dentry *ent;
+	
+	d_xen_zerocopy = debugfs_create_dir("xen_zerocopy", NULL);
+
+	if (!d_xen_zerocopy)
+		return;
+
+	ent = debugfs_create_ulong("xen_zerocopy_cnt", 0400,
+				   d_xen_zerocopy, &xen_zerocopy_cnt);
+	if (!ent)
+		goto fail;
+
+	spin_lock_init(&xen_zerocopy_lock);
+	
+	return;
+
+fail:
+	debugfs_remove_recursive(d_xen_zerocopy);
+	return;
+}
+#endif
+
 /**
  * e1000_init_module - Driver Registration Routine
  *
@@ -7574,6 +7614,8 @@ static int __init e1000_init_module(void)
 		e1000e_driver_version);
 	pr_info("Copyright(c) 1999 - 2015 Intel Corporation.\n");
 
+	xen_zerocopy_create_debugfs();
+
 	return pci_register_driver(&e1000_driver);
 }
 module_init(e1000_init_module);
diff --git a/drivers/net/xen-netback/interface.c b/drivers/net/xen-netback/interface.c
index 78ebe49..169f2e7 100644
--- a/drivers/net/xen-netback/interface.c
+++ b/drivers/net/xen-netback/interface.c
@@ -56,6 +56,7 @@ void xenvif_skb_zerocopy_prepare(struct xenvif_queue *queue,
 				 struct sk_buff *skb)
 {
 	skb_shinfo(skb)->tx_flags |= SKBTX_DEV_ZEROCOPY;
+	skb_shinfo(skb)->tx_flags |= SKBTX_WIFI_STATUS;
 	atomic_inc(&queue->inflight_packets);
 }
 
-- 
2.7.4

